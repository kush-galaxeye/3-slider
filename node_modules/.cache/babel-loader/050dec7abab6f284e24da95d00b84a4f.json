{"ast":null,"code":"import { normSpaces, IN_BROWSER, getLabelAttribute, hasOpenreplayAttribute } from \"../utils.js\";\nimport { SetInputTarget, SetInputValue, SetInputChecked } from \"../messages/index.js\";\n\nfunction isInput(node) {\n  if (!(node instanceof HTMLInputElement)) {\n    return false;\n  }\n\n  const type = node.type;\n  return type === 'text' || type === 'password' || type === 'email' || type === 'search' || type === 'number' || type === 'range';\n}\n\nfunction isCheckable(node) {\n  if (!(node instanceof HTMLInputElement)) {\n    return false;\n  }\n\n  const type = node.type;\n  return type === 'checkbox' || type === 'radio';\n}\n\nconst labelElementFor = IN_BROWSER && 'labels' in HTMLInputElement.prototype ? node => {\n  let p = node;\n\n  while ((p = p.parentNode) !== null) {\n    if (p.nodeName === 'LABEL') {\n      return p;\n    }\n  }\n\n  const labels = node.labels;\n\n  if (labels !== null && labels.length === 1) {\n    return labels[0];\n  }\n} : node => {\n  let p = node;\n\n  while ((p = p.parentNode) !== null) {\n    if (p.nodeName === 'LABEL') {\n      return p;\n    }\n  }\n\n  const id = node.id;\n\n  if (id) {\n    const labels = document.querySelectorAll('label[for=\"' + id + '\"]');\n\n    if (labels !== null && labels.length === 1) {\n      return labels[0];\n    }\n  }\n};\nexport function getInputLabel(node) {\n  let label = getLabelAttribute(node);\n\n  if (label === null) {\n    const labelElement = labelElementFor(node);\n    label = labelElement === undefined ? node.placeholder || node.name : labelElement.innerText;\n  }\n\n  return normSpaces(label).slice(0, 100);\n}\nexport default function (app, opts) {\n  const options = Object.assign({\n    obscureInputNumbers: true,\n    obscureInputEmails: true,\n    defaultInputMode: 0\n    /* Plain */\n\n  }, opts);\n\n  function sendInputTarget(id, node) {\n    const label = getInputLabel(node);\n\n    if (label !== '') {\n      app.send(new SetInputTarget(id, label));\n    }\n  }\n\n  function sendInputValue(id, node) {\n    let value = node.value;\n    let inputMode = options.defaultInputMode;\n\n    if (node.type === 'password' || hasOpenreplayAttribute(node, 'hidden')) {\n      inputMode = 2\n      /* Hidden */\n      ;\n    } else if (hasOpenreplayAttribute(node, 'obscured') || inputMode === 0\n    /* Plain */\n    && (options.obscureInputNumbers && /\\d\\d\\d\\d/.test(value) || options.obscureInputEmails && (node.type === 'email' || !!~value.indexOf('@')))) {\n      inputMode = 1\n      /* Obscured */\n      ;\n    }\n\n    let mask = 0;\n\n    switch (inputMode) {\n      case 2\n      /* Hidden */\n      :\n        mask = -1;\n        value = '';\n        break;\n\n      case 1\n      /* Obscured */\n      :\n        mask = value.length;\n        value = '';\n        break;\n    }\n\n    app.send(new SetInputValue(id, value, mask));\n  }\n\n  const inputValues = new Map();\n  const checkableValues = new Map();\n  const registeredTargets = new Set();\n  app.attachStopCallback(() => {\n    inputValues.clear();\n    checkableValues.clear();\n    registeredTargets.clear();\n  });\n  app.ticker.attach(() => {\n    inputValues.forEach((value, id) => {\n      const node = app.nodes.getNode(id);\n\n      if (!isInput(node)) {\n        inputValues.delete(id);\n        return;\n      }\n\n      if (value !== node.value) {\n        inputValues.set(id, node.value);\n\n        if (!registeredTargets.has(id)) {\n          registeredTargets.add(id);\n          sendInputTarget(id, node);\n        }\n\n        sendInputValue(id, node);\n      }\n    });\n    checkableValues.forEach((checked, id) => {\n      const node = app.nodes.getNode(id);\n\n      if (!isCheckable(node)) {\n        checkableValues.delete(id);\n        return;\n      }\n\n      if (checked !== node.checked) {\n        checkableValues.set(id, node.checked);\n        app.send(new SetInputChecked(id, node.checked));\n      }\n    });\n  });\n  app.ticker.attach(Set.prototype.clear, 100, false, registeredTargets);\n  app.nodes.attachNodeCallback(app.safe(node => {\n    const id = app.nodes.getID(node);\n\n    if (id === undefined) {\n      return;\n    }\n\n    if (isInput(node)) {\n      inputValues.set(id, node.value);\n      sendInputValue(id, node);\n      return;\n    }\n\n    if (isCheckable(node)) {\n      checkableValues.set(id, node.checked);\n      app.send(new SetInputChecked(id, node.checked));\n      return;\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/kushthakker/Downloads/imagecompare-both/node_modules/@openreplay/tracker/lib/modules/input.js"],"names":["normSpaces","IN_BROWSER","getLabelAttribute","hasOpenreplayAttribute","SetInputTarget","SetInputValue","SetInputChecked","isInput","node","HTMLInputElement","type","isCheckable","labelElementFor","prototype","p","parentNode","nodeName","labels","length","id","document","querySelectorAll","getInputLabel","label","labelElement","undefined","placeholder","name","innerText","slice","app","opts","options","Object","assign","obscureInputNumbers","obscureInputEmails","defaultInputMode","sendInputTarget","send","sendInputValue","value","inputMode","test","indexOf","mask","inputValues","Map","checkableValues","registeredTargets","Set","attachStopCallback","clear","ticker","attach","forEach","nodes","getNode","delete","set","has","add","checked","attachNodeCallback","safe","getID"],"mappings":"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","sourcesContent":["import { normSpaces, IN_BROWSER, getLabelAttribute, hasOpenreplayAttribute } from \"../utils.js\";\nimport { SetInputTarget, SetInputValue, SetInputChecked } from \"../messages/index.js\";\nfunction isInput(node) {\n    if (!(node instanceof HTMLInputElement)) {\n        return false;\n    }\n    const type = node.type;\n    return (type === 'text' ||\n        type === 'password' ||\n        type === 'email' ||\n        type === 'search' ||\n        type === 'number' ||\n        type === 'range');\n}\nfunction isCheckable(node) {\n    if (!(node instanceof HTMLInputElement)) {\n        return false;\n    }\n    const type = node.type;\n    return type === 'checkbox' || type === 'radio';\n}\nconst labelElementFor = IN_BROWSER && 'labels' in HTMLInputElement.prototype\n    ? (node) => {\n        let p = node;\n        while ((p = p.parentNode) !== null) {\n            if (p.nodeName === 'LABEL') {\n                return p;\n            }\n        }\n        const labels = node.labels;\n        if (labels !== null && labels.length === 1) {\n            return labels[0];\n        }\n    }\n    : (node) => {\n        let p = node;\n        while ((p = p.parentNode) !== null) {\n            if (p.nodeName === 'LABEL') {\n                return p;\n            }\n        }\n        const id = node.id;\n        if (id) {\n            const labels = document.querySelectorAll('label[for=\"' + id + '\"]');\n            if (labels !== null && labels.length === 1) {\n                return labels[0];\n            }\n        }\n    };\nexport function getInputLabel(node) {\n    let label = getLabelAttribute(node);\n    if (label === null) {\n        const labelElement = labelElementFor(node);\n        label =\n            labelElement === undefined\n                ? node.placeholder || node.name\n                : labelElement.innerText;\n    }\n    return normSpaces(label).slice(0, 100);\n}\nexport default function (app, opts) {\n    const options = Object.assign({\n        obscureInputNumbers: true,\n        obscureInputEmails: true,\n        defaultInputMode: 0 /* Plain */,\n    }, opts);\n    function sendInputTarget(id, node) {\n        const label = getInputLabel(node);\n        if (label !== '') {\n            app.send(new SetInputTarget(id, label));\n        }\n    }\n    function sendInputValue(id, node) {\n        let value = node.value;\n        let inputMode = options.defaultInputMode;\n        if (node.type === 'password' || hasOpenreplayAttribute(node, 'hidden')) {\n            inputMode = 2 /* Hidden */;\n        }\n        else if (hasOpenreplayAttribute(node, 'obscured') ||\n            (inputMode === 0 /* Plain */ &&\n                ((options.obscureInputNumbers && /\\d\\d\\d\\d/.test(value)) ||\n                    (options.obscureInputEmails &&\n                        (node.type === 'email' || !!~value.indexOf('@')))))) {\n            inputMode = 1 /* Obscured */;\n        }\n        let mask = 0;\n        switch (inputMode) {\n            case 2 /* Hidden */:\n                mask = -1;\n                value = '';\n                break;\n            case 1 /* Obscured */:\n                mask = value.length;\n                value = '';\n                break;\n        }\n        app.send(new SetInputValue(id, value, mask));\n    }\n    const inputValues = new Map();\n    const checkableValues = new Map();\n    const registeredTargets = new Set();\n    app.attachStopCallback(() => {\n        inputValues.clear();\n        checkableValues.clear();\n        registeredTargets.clear();\n    });\n    app.ticker.attach(() => {\n        inputValues.forEach((value, id) => {\n            const node = app.nodes.getNode(id);\n            if (!isInput(node)) {\n                inputValues.delete(id);\n                return;\n            }\n            if (value !== node.value) {\n                inputValues.set(id, node.value);\n                if (!registeredTargets.has(id)) {\n                    registeredTargets.add(id);\n                    sendInputTarget(id, node);\n                }\n                sendInputValue(id, node);\n            }\n        });\n        checkableValues.forEach((checked, id) => {\n            const node = app.nodes.getNode(id);\n            if (!isCheckable(node)) {\n                checkableValues.delete(id);\n                return;\n            }\n            if (checked !== node.checked) {\n                checkableValues.set(id, node.checked);\n                app.send(new SetInputChecked(id, node.checked));\n            }\n        });\n    });\n    app.ticker.attach(Set.prototype.clear, 100, false, registeredTargets);\n    app.nodes.attachNodeCallback(app.safe((node) => {\n        const id = app.nodes.getID(node);\n        if (id === undefined) {\n            return;\n        }\n        if (isInput(node)) {\n            inputValues.set(id, node.value);\n            sendInputValue(id, node);\n            return;\n        }\n        if (isCheckable(node)) {\n            checkableValues.set(id, node.checked);\n            app.send(new SetInputChecked(id, node.checked));\n            return;\n        }\n    }));\n}\n"]},"metadata":{},"sourceType":"module"}
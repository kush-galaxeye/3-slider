{"ast":null,"code":"export function timestamp() {\n  return Math.round(performance.now()) + performance.timing.navigationStart;\n}\nexport const stars = 'repeat' in String.prototype ? str => '*'.repeat(str.length) : str => str.replace(/./g, '*');\nexport function normSpaces(str) {\n  return str.trim().replace(/\\s+/g, ' ');\n} // isAbsoluteUrl regexp:  /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url)\n\nexport function isURL(s) {\n  return s.substr(0, 8) === 'https://' || s.substr(0, 7) === 'http://';\n}\nexport const IN_BROWSER = !(typeof window === \"undefined\");\nexport const log = console.log;\nexport const warn = console.warn;\nexport const DOCS_HOST = 'https://docs.openreplay.com';\nconst warnedFeatures = {};\nexport function deprecationWarn(nameOfFeature, useInstead) {\n  let docsPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"/\";\n\n  if (warnedFeatures[nameOfFeature]) {\n    return;\n  }\n\n  warn(`OpenReplay: ${nameOfFeature} is deprecated. ${useInstead ? `Please, use ${useInstead} instead.` : \"\"} Visit ${DOCS_HOST}${docsPath} for more information.`);\n  warnedFeatures[nameOfFeature] = true;\n}\nexport function getLabelAttribute(e) {\n  let value = e.getAttribute(\"data-openreplay-label\");\n\n  if (value !== null) {\n    return value;\n  }\n\n  value = e.getAttribute(\"data-asayer-label\");\n\n  if (value !== null) {\n    deprecationWarn(`\"data-asayer-label\" attribute`, `\"data-openreplay-label\" attribute`, \"/\");\n  }\n\n  return value;\n}\nexport function hasOpenreplayAttribute(e, name) {\n  const newName = `data-openreplay-${name}`;\n\n  if (e.hasAttribute(newName)) {\n    return true;\n  }\n\n  const oldName = `data-asayer-${name}`;\n\n  if (e.hasAttribute(oldName)) {\n    deprecationWarn(`\"${oldName}\" attribute`, `\"${newName}\" attribute`, \"/installation/sanitize-data\");\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Users/kushthakker/Downloads/imagecompare-both/node_modules/@openreplay/tracker/lib/utils.js"],"names":["timestamp","Math","round","performance","now","timing","navigationStart","stars","String","prototype","str","repeat","length","replace","normSpaces","trim","isURL","s","substr","IN_BROWSER","window","log","console","warn","DOCS_HOST","warnedFeatures","deprecationWarn","nameOfFeature","useInstead","docsPath","getLabelAttribute","e","value","getAttribute","hasOpenreplayAttribute","name","newName","hasAttribute","oldName"],"mappings":"AAAA,OAAO,SAASA,SAAT,GAAqB;AACxB,SAAOC,IAAI,CAACC,KAAL,CAAWC,WAAW,CAACC,GAAZ,EAAX,IAAgCD,WAAW,CAACE,MAAZ,CAAmBC,eAA1D;AACH;AACD,OAAO,MAAMC,KAAK,GAAG,YAAYC,MAAM,CAACC,SAAnB,GACdC,GAAD,IAAS,IAAIC,MAAJ,CAAWD,GAAG,CAACE,MAAf,CADM,GAEdF,GAAD,IAASA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,GAAlB,CAFR;AAGP,OAAO,SAASC,UAAT,CAAoBJ,GAApB,EAAyB;AAC5B,SAAOA,GAAG,CAACK,IAAJ,GAAWF,OAAX,CAAmB,MAAnB,EAA2B,GAA3B,CAAP;AACH,C,CACD;;AACA,OAAO,SAASG,KAAT,CAAeC,CAAf,EAAkB;AACrB,SAAOA,CAAC,CAACC,MAAF,CAAS,CAAT,EAAY,CAAZ,MAAmB,UAAnB,IAAiCD,CAAC,CAACC,MAAF,CAAS,CAAT,EAAY,CAAZ,MAAmB,SAA3D;AACH;AACD,OAAO,MAAMC,UAAU,GAAG,EAAE,OAAOC,MAAP,KAAkB,WAApB,CAAnB;AACP,OAAO,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAApB;AACP,OAAO,MAAME,IAAI,GAAGD,OAAO,CAACC,IAArB;AACP,OAAO,MAAMC,SAAS,GAAG,6BAAlB;AACP,MAAMC,cAAc,GAAG,EAAvB;AACA,OAAO,SAASC,eAAT,CAAyBC,aAAzB,EAAwCC,UAAxC,EAAoE;AAAA,MAAhBC,QAAgB,uEAAL,GAAK;;AACvE,MAAIJ,cAAc,CAACE,aAAD,CAAlB,EAAmC;AAC/B;AACH;;AACDJ,EAAAA,IAAI,CAAE,eAAcI,aAAc,mBAAkBC,UAAU,GAAI,eAAcA,UAAW,WAA7B,GAA0C,EAAG,UAASJ,SAAU,GAAEK,QAAS,wBAArI,CAAJ;AACAJ,EAAAA,cAAc,CAACE,aAAD,CAAd,GAAgC,IAAhC;AACH;AACD,OAAO,SAASG,iBAAT,CAA2BC,CAA3B,EAA8B;AACjC,MAAIC,KAAK,GAAGD,CAAC,CAACE,YAAF,CAAe,uBAAf,CAAZ;;AACA,MAAID,KAAK,KAAK,IAAd,EAAoB;AAChB,WAAOA,KAAP;AACH;;AACDA,EAAAA,KAAK,GAAGD,CAAC,CAACE,YAAF,CAAe,mBAAf,CAAR;;AACA,MAAID,KAAK,KAAK,IAAd,EAAoB;AAChBN,IAAAA,eAAe,CAAE,+BAAF,EAAmC,mCAAnC,EAAuE,GAAvE,CAAf;AACH;;AACD,SAAOM,KAAP;AACH;AACD,OAAO,SAASE,sBAAT,CAAgCH,CAAhC,EAAmCI,IAAnC,EAAyC;AAC5C,QAAMC,OAAO,GAAI,mBAAkBD,IAAK,EAAxC;;AACA,MAAIJ,CAAC,CAACM,YAAF,CAAeD,OAAf,CAAJ,EAA6B;AACzB,WAAO,IAAP;AACH;;AACD,QAAME,OAAO,GAAI,eAAcH,IAAK,EAApC;;AACA,MAAIJ,CAAC,CAACM,YAAF,CAAeC,OAAf,CAAJ,EAA6B;AACzBZ,IAAAA,eAAe,CAAE,IAAGY,OAAQ,aAAb,EAA4B,IAAGF,OAAQ,aAAvC,EAAqD,6BAArD,CAAf;AACA,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH","sourcesContent":["export function timestamp() {\n    return Math.round(performance.now()) + performance.timing.navigationStart;\n}\nexport const stars = 'repeat' in String.prototype\n    ? (str) => '*'.repeat(str.length)\n    : (str) => str.replace(/./g, '*');\nexport function normSpaces(str) {\n    return str.trim().replace(/\\s+/g, ' ');\n}\n// isAbsoluteUrl regexp:  /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url)\nexport function isURL(s) {\n    return s.substr(0, 8) === 'https://' || s.substr(0, 7) === 'http://';\n}\nexport const IN_BROWSER = !(typeof window === \"undefined\");\nexport const log = console.log;\nexport const warn = console.warn;\nexport const DOCS_HOST = 'https://docs.openreplay.com';\nconst warnedFeatures = {};\nexport function deprecationWarn(nameOfFeature, useInstead, docsPath = \"/\") {\n    if (warnedFeatures[nameOfFeature]) {\n        return;\n    }\n    warn(`OpenReplay: ${nameOfFeature} is deprecated. ${useInstead ? `Please, use ${useInstead} instead.` : \"\"} Visit ${DOCS_HOST}${docsPath} for more information.`);\n    warnedFeatures[nameOfFeature] = true;\n}\nexport function getLabelAttribute(e) {\n    let value = e.getAttribute(\"data-openreplay-label\");\n    if (value !== null) {\n        return value;\n    }\n    value = e.getAttribute(\"data-asayer-label\");\n    if (value !== null) {\n        deprecationWarn(`\"data-asayer-label\" attribute`, `\"data-openreplay-label\" attribute`, \"/\");\n    }\n    return value;\n}\nexport function hasOpenreplayAttribute(e, name) {\n    const newName = `data-openreplay-${name}`;\n    if (e.hasAttribute(newName)) {\n        return true;\n    }\n    const oldName = `data-asayer-${name}`;\n    if (e.hasAttribute(oldName)) {\n        deprecationWarn(`\"${oldName}\" attribute`, `\"${newName}\" attribute`, \"/installation/sanitize-data\");\n        return true;\n    }\n    return false;\n}\n"]},"metadata":{},"sourceType":"module"}
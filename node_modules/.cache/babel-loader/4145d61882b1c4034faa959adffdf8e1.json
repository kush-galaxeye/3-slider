{"ast":null,"code":"var _jsxFileName = \"/Users/kushthakker/Downloads/imagecompare-both/src/components/linkedin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useLinkedIn } from \"react-linkedin-login-oauth2\";\nimport { atom, useAtom } from \"jotai\";\nimport { loginAtom } from \"./atoms\";\nimport { userAtom } from \"./atoms\"; // You can use provided image shipped by this package or using your own\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LinkedInPage() {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useAtom(loginAtom);\n  const [user, setUser] = useAtom(userAtom);\n  const {\n    linkedInLogin\n  } = useLinkedIn({\n    clientId: \"78piah9ll9axgs\",\n    redirectUri: `https://galaxeye-slider.vercel.app/linkedin`,\n    // for Next.js, you can use `${typeof window === 'object' && window.location.origin}/linkedin`\n    onSuccess: code => {\n      // console.log(code);\n      (async function () {\n        try {\n          const accessToken = await fetch(`https://secret-sierra-81136.herokuapp.com/https://www.linkedin.com/oauth/v2/accessToken?grant_type=authorization_code&code=${code}&redirect_uri=https://galaxeye-slider.vercel.app/linkedin&client_id=78piah9ll9axgs&client_secret=p6Td19LXrFoyffJq&scope=r_liteprofile+r_emailaddress`);\n          const json = await accessToken.json(); // console.log(json, \"json\");\n\n          const emailreq = await fetch(`https://secret-sierra-81136.herokuapp.com/https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))&oauth2_access_token=${json.access_token}`);\n          const emailres = await emailreq.json();\n          const trueemail = emailres.elements[0];\n          const fetchedemail = trueemail[\"handle~\"];\n          const email = {\n            email: fetchedemail.emailAddress\n          };\n          setLoggedIn(true);\n          setUser(email);\n        } catch (err) {\n          console.log(err);\n        }\n      })();\n    },\n    onError: error => {\n      console.log(error);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    onClick: linkedInLogin,\n    src: \"sign-in-link.png\",\n    alt: \"Sign in with Linked In\",\n    style: {\n      maxWidth: \"180px\",\n      cursor: \"pointer\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LinkedInPage, \"l/UcC6xlYGZmLsgap6My8vTDJLU=\", false, function () {\n  return [useAtom, useAtom, useLinkedIn];\n});\n\n_c = LinkedInPage;\nexport default LinkedInPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkedInPage\");","map":{"version":3,"sources":["/Users/kushthakker/Downloads/imagecompare-both/src/components/linkedin.js"],"names":["React","useState","useLinkedIn","atom","useAtom","loginAtom","userAtom","LinkedInPage","loggedIn","setLoggedIn","user","setUser","linkedInLogin","clientId","redirectUri","onSuccess","code","accessToken","fetch","json","emailreq","access_token","emailres","trueemail","elements","fetchedemail","email","emailAddress","err","console","log","onError","error","maxWidth","cursor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,SAASC,QAAT,QAAyB,SAAzB,C,CACA;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,OAAO,CAACC,SAAD,CAAvC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBP,OAAO,CAACE,QAAD,CAA/B;AAEA,QAAM;AAAEM,IAAAA;AAAF,MAAoBV,WAAW,CAAC;AACpCW,IAAAA,QAAQ,EAAE,gBAD0B;AAEpCC,IAAAA,WAAW,EAAG,6CAFsB;AAEwB;AAC5DC,IAAAA,SAAS,EAAGC,IAAD,IAAU;AACnB;AAEA,OAAC,kBAAkB;AACjB,YAAI;AACF,gBAAMC,WAAW,GAAG,MAAMC,KAAK,CAC5B,8HAA6HF,IAAK,sJADtG,CAA/B;AAGA,gBAAMG,IAAI,GAAG,MAAMF,WAAW,CAACE,IAAZ,EAAnB,CAJE,CAKF;;AACA,gBAAMC,QAAQ,GAAG,MAAMF,KAAK,CACzB,oJAAmJC,IAAI,CAACE,YAAa,EAD5I,CAA5B;AAGA,gBAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACD,IAAT,EAAvB;AAEA,gBAAMI,SAAS,GAAGD,QAAQ,CAACE,QAAT,CAAkB,CAAlB,CAAlB;AACA,gBAAMC,YAAY,GAAGF,SAAS,CAAC,SAAD,CAA9B;AACA,gBAAMG,KAAK,GAAG;AACZA,YAAAA,KAAK,EAAED,YAAY,CAACE;AADR,WAAd;AAGAlB,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,UAAAA,OAAO,CAACe,KAAD,CAAP;AACD,SAlBD,CAkBE,OAAOE,GAAP,EAAY;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,OAtBD;AAuBD,KA7BmC;AA8BpCG,IAAAA,OAAO,EAAGC,KAAD,IAAW;AAClBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AAhCmC,GAAD,CAArC;AAmCA,sBACE;AACE,IAAA,OAAO,EAAEpB,aADX;AAEE,IAAA,GAAG,EAAC,kBAFN;AAGE,IAAA,GAAG,EAAC,wBAHN;AAIE,IAAA,KAAK,EAAE;AAAEqB,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,MAAM,EAAE;AAA7B;AAJT;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA/CQ3B,Y;UACyBH,O,EACRA,O,EAEEF,W;;;KAJnBK,Y;AAiDT,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { useLinkedIn } from \"react-linkedin-login-oauth2\";\nimport { atom, useAtom } from \"jotai\";\nimport { loginAtom } from \"./atoms\";\nimport { userAtom } from \"./atoms\";\n// You can use provided image shipped by this package or using your own\n\nfunction LinkedInPage() {\n  const [loggedIn, setLoggedIn] = useAtom(loginAtom);\n  const [user, setUser] = useAtom(userAtom);\n\n  const { linkedInLogin } = useLinkedIn({\n    clientId: \"78piah9ll9axgs\",\n    redirectUri: `https://galaxeye-slider.vercel.app/linkedin`, // for Next.js, you can use `${typeof window === 'object' && window.location.origin}/linkedin`\n    onSuccess: (code) => {\n      // console.log(code);\n\n      (async function () {\n        try {\n          const accessToken = await fetch(\n            `https://secret-sierra-81136.herokuapp.com/https://www.linkedin.com/oauth/v2/accessToken?grant_type=authorization_code&code=${code}&redirect_uri=https://galaxeye-slider.vercel.app/linkedin&client_id=78piah9ll9axgs&client_secret=p6Td19LXrFoyffJq&scope=r_liteprofile+r_emailaddress`\n          );\n          const json = await accessToken.json();\n          // console.log(json, \"json\");\n          const emailreq = await fetch(\n            `https://secret-sierra-81136.herokuapp.com/https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))&oauth2_access_token=${json.access_token}`\n          );\n          const emailres = await emailreq.json();\n\n          const trueemail = emailres.elements[0];\n          const fetchedemail = trueemail[\"handle~\"];\n          const email = {\n            email: fetchedemail.emailAddress,\n          };\n          setLoggedIn(true);\n          setUser(email);\n        } catch (err) {\n          console.log(err);\n        }\n      })();\n    },\n    onError: (error) => {\n      console.log(error);\n    },\n  });\n\n  return (\n    <img\n      onClick={linkedInLogin}\n      src=\"sign-in-link.png\"\n      alt=\"Sign in with Linked In\"\n      style={{ maxWidth: \"180px\", cursor: \"pointer\" }}\n    />\n  );\n}\n\nexport default LinkedInPage;\n"]},"metadata":{},"sourceType":"module"}
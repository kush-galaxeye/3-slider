{"ast":null,"code":"import { SetViewportScroll, SetNodeScroll } from \"../messages/index.js\";\nexport default function (app) {\n  let documentScroll = false;\n  const nodeScroll = new Map();\n  const sendSetViewportScroll = app.safe(() => app.send(new SetViewportScroll(window.pageXOffset || document.documentElement && document.documentElement.scrollLeft || document.body && document.body.scrollLeft || 0, window.pageYOffset || document.documentElement && document.documentElement.scrollTop || document.body && document.body.scrollTop || 0)));\n  const sendSetNodeScroll = app.safe((s, node) => {\n    const id = app.nodes.getID(node);\n\n    if (id !== undefined) {\n      app.send(new SetNodeScroll(id, s[0], s[1]));\n    }\n  });\n  app.attachStartCallback(sendSetViewportScroll);\n  app.attachStopCallback(() => {\n    documentScroll = false;\n    nodeScroll.clear();\n  });\n  app.attachEventListener(window, 'scroll', e => {\n    const target = e.target;\n\n    if (target === document) {\n      documentScroll = true;\n      return;\n    }\n\n    if (target instanceof Element) {\n      {\n        nodeScroll.set(target, [target.scrollLeft, target.scrollTop]);\n      }\n    }\n  });\n  app.ticker.attach(() => {\n    if (documentScroll) {\n      sendSetViewportScroll();\n      documentScroll = false;\n    }\n\n    nodeScroll.forEach(sendSetNodeScroll);\n    nodeScroll.clear();\n  }, 5, false);\n}","map":{"version":3,"sources":["/Users/kushthakker/Downloads/imagecompare-both/node_modules/@openreplay/tracker/lib/modules/scroll.js"],"names":["SetViewportScroll","SetNodeScroll","app","documentScroll","nodeScroll","Map","sendSetViewportScroll","safe","send","window","pageXOffset","document","documentElement","scrollLeft","body","pageYOffset","scrollTop","sendSetNodeScroll","s","node","id","nodes","getID","undefined","attachStartCallback","attachStopCallback","clear","attachEventListener","e","target","Element","set","ticker","attach","forEach"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,aAA5B,QAAiD,sBAAjD;AACA,eAAe,UAAUC,GAAV,EAAe;AAC1B,MAAIC,cAAc,GAAG,KAArB;AACA,QAAMC,UAAU,GAAG,IAAIC,GAAJ,EAAnB;AACA,QAAMC,qBAAqB,GAAGJ,GAAG,CAACK,IAAJ,CAAS,MAAML,GAAG,CAACM,IAAJ,CAAS,IAAIR,iBAAJ,CAAsBS,MAAM,CAACC,WAAP,IACvEC,QAAQ,CAACC,eAAT,IAA4BD,QAAQ,CAACC,eAAT,CAAyBC,UADkB,IAEvEF,QAAQ,CAACG,IAAT,IAAiBH,QAAQ,CAACG,IAAT,CAAcD,UAFwC,IAGxE,CAHkD,EAG/CJ,MAAM,CAACM,WAAP,IACFJ,QAAQ,CAACC,eAAT,IAA4BD,QAAQ,CAACC,eAAT,CAAyBI,SADnD,IAEFL,QAAQ,CAACG,IAAT,IAAiBH,QAAQ,CAACG,IAAT,CAAcE,SAF7B,IAGH,CANkD,CAAT,CAAf,CAA9B;AAOA,QAAMC,iBAAiB,GAAGf,GAAG,CAACK,IAAJ,CAAS,CAACW,CAAD,EAAIC,IAAJ,KAAa;AAC5C,UAAMC,EAAE,GAAGlB,GAAG,CAACmB,KAAJ,CAAUC,KAAV,CAAgBH,IAAhB,CAAX;;AACA,QAAIC,EAAE,KAAKG,SAAX,EAAsB;AAClBrB,MAAAA,GAAG,CAACM,IAAJ,CAAS,IAAIP,aAAJ,CAAkBmB,EAAlB,EAAsBF,CAAC,CAAC,CAAD,CAAvB,EAA4BA,CAAC,CAAC,CAAD,CAA7B,CAAT;AACH;AACJ,GALyB,CAA1B;AAMAhB,EAAAA,GAAG,CAACsB,mBAAJ,CAAwBlB,qBAAxB;AACAJ,EAAAA,GAAG,CAACuB,kBAAJ,CAAuB,MAAM;AACzBtB,IAAAA,cAAc,GAAG,KAAjB;AACAC,IAAAA,UAAU,CAACsB,KAAX;AACH,GAHD;AAIAxB,EAAAA,GAAG,CAACyB,mBAAJ,CAAwBlB,MAAxB,EAAgC,QAAhC,EAA2CmB,CAAD,IAAO;AAC7C,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;;AACA,QAAIA,MAAM,KAAKlB,QAAf,EAAyB;AACrBR,MAAAA,cAAc,GAAG,IAAjB;AACA;AACH;;AACD,QAAI0B,MAAM,YAAYC,OAAtB,EAA+B;AAC3B;AACI1B,QAAAA,UAAU,CAAC2B,GAAX,CAAeF,MAAf,EAAuB,CAACA,MAAM,CAAChB,UAAR,EAAoBgB,MAAM,CAACb,SAA3B,CAAvB;AACH;AACJ;AACJ,GAXD;AAYAd,EAAAA,GAAG,CAAC8B,MAAJ,CAAWC,MAAX,CAAkB,MAAM;AACpB,QAAI9B,cAAJ,EAAoB;AAChBG,MAAAA,qBAAqB;AACrBH,MAAAA,cAAc,GAAG,KAAjB;AACH;;AACDC,IAAAA,UAAU,CAAC8B,OAAX,CAAmBjB,iBAAnB;AACAb,IAAAA,UAAU,CAACsB,KAAX;AACH,GAPD,EAOG,CAPH,EAOM,KAPN;AAQH","sourcesContent":["import { SetViewportScroll, SetNodeScroll } from \"../messages/index.js\";\nexport default function (app) {\n    let documentScroll = false;\n    const nodeScroll = new Map();\n    const sendSetViewportScroll = app.safe(() => app.send(new SetViewportScroll(window.pageXOffset ||\n        (document.documentElement && document.documentElement.scrollLeft) ||\n        (document.body && document.body.scrollLeft) ||\n        0, window.pageYOffset ||\n        (document.documentElement && document.documentElement.scrollTop) ||\n        (document.body && document.body.scrollTop) ||\n        0)));\n    const sendSetNodeScroll = app.safe((s, node) => {\n        const id = app.nodes.getID(node);\n        if (id !== undefined) {\n            app.send(new SetNodeScroll(id, s[0], s[1]));\n        }\n    });\n    app.attachStartCallback(sendSetViewportScroll);\n    app.attachStopCallback(() => {\n        documentScroll = false;\n        nodeScroll.clear();\n    });\n    app.attachEventListener(window, 'scroll', (e) => {\n        const target = e.target;\n        if (target === document) {\n            documentScroll = true;\n            return;\n        }\n        if (target instanceof Element) {\n            {\n                nodeScroll.set(target, [target.scrollLeft, target.scrollTop]);\n            }\n        }\n    });\n    app.ticker.attach(() => {\n        if (documentScroll) {\n            sendSetViewportScroll();\n            documentScroll = false;\n        }\n        nodeScroll.forEach(sendSetNodeScroll);\n        nodeScroll.clear();\n    }, 5, false);\n}\n"]},"metadata":{},"sourceType":"module"}